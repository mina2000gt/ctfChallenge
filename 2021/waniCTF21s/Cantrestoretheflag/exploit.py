from ptrlib import *

sock = Socket("crt.cry.wanictf.org",50000)

def primes(n):
    f = [True for i in range(n)]
    p = []
    for i in range(2,n):
        if f[i]:
            p.append(i)
            for j in range(i,n,i):
                f[j] = False
    return p
from functools import reduce

def extgcd(a, b):
    if b:
        d, y, x = extgcd(b, a % b)
        y -= (a // b) * x
        return d, x, y
    return a, 1, 0

# V = [(X_i, Y_i), ...]: X_i (mod Y_i)
def remainder(V):
    x = 0; d = 1
    for X, Y in V:
        g, a, b = extgcd(d, Y)
        x, d = (Y*b*x + d*a*X) // g, d*(Y // g)
        x %= d
    return x, d

flag = 1
d = []
for i in primes(300):
    sock.recvuntil(b'> ')
    sock.sendline(str(i).encode())
    p = sock.recvline()
    d.append([int(p.decode()),i])

flag = remainder(d)
print(flag[0].to_bytes(103,'big'))

