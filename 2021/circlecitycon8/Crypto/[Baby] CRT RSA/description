
[Baby] CRT RSA 100 Points
SOLVED
Alice and Bob still haven't learnt their lesson and they insist on using textbook RSA to encrypt their messages. Now they also want to talk to Charlie as well. They want to talk about their favorite book and they each send a quote from their favorite book to each other. Can you show Alice, Bob, and Charlie why this isn't secure?

Hint: Alice, Bob, and Charlie each like the same quote from the book
Flag format: flag{...}
from Crypto.Util.number import getPrime, bytes_to_long

pt = bytes_to_long(
    b"???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????"
)

e = 3

n_1 = getPrime(1024) * getPrime(1024)
n_2 = getPrime(1024) * getPrime(1024)
n_3 = getPrime(1024) * getPrime(1024)

ct_1 = pow(pt, e, n_1)
ct_2 = pow(pt, e, n_2)
ct_3 = pow(pt, e, n_3)

print(f"e = {e}")
print(f"n_1 = {n_1}")
print(f"n_2 = {n_2}")
print(f"n_3 = {n_3}")
print(f"ct_1 = {ct_1}")
print(f"ct_2 = {ct_2}")
print(f"ct_3 = {ct_3}")

Author: Raj
crt_rsaSize: 3.67 KB
MD5: b4a098fd11a785a37c2f189d6b305902
Hint! We have the same message encrypted three times under three different public keys. Each of the public moduli have no common factors.

https://crypto.stackexchange.com/questions/6713/low-public-exponent-attack-for-rsa
